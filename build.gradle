plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'dabang.star'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    all {
        // 스프링 부트 기본 로거인 logback 대신 lo4j2 를 사용하기 위해 제외한다.
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'

    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // 세션 저장소를 레디스로 사용하기 위한 의존성 추가
    implementation 'org.springframework.session:spring-session-data-redis'

    // 스프링 부트 redis 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // 스프링 부트 2.3부터 spring-boot-starter-web 에서 제외된 validation 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // logback 보다 처리량이 뛰어난 log4j2 의존성 추가
    // https://logging.apache.org/log4j/2.x/performance.html
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    // lo4j2 설정 파일을 yaml 파일로 작성하기 위한 의존성 추가 (설정 파일 형식은 XML, JSON, YAML, Properties 로 작성 가능)
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

    // GCP 관련 의존성 추가
    implementation 'com.google.cloud:spring-cloud-gcp-starter:2.0.2'

    // GCP Storage 관련 의존성 추가
    implementation 'com.google.cloud:spring-cloud-gcp-storage:2.0.2'

    // GCP Secret Manager 관련 의존성 추가
    implementation 'com.google.cloud:spring-cloud-gcp-secretmanager:2.0.2'

    // JDK 9+ SE 에서 제외된 JAXB 의존성 추가 (URL 참고)
    // https://github.com/aws/aws-sdk-java/blob/6a086cfd3e26f74592cf3a7cb96f43e51654a926/aws-java-sdk-core/src/main/java/com/amazonaws/util/Base64.java#L67
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    // WGS-84 기반 지리 공간 계산 라이브러리 의존성 추가
    implementation 'org.locationtech.spatial4j:spatial4j:0.8'

    // MySQL 의존성 추가
    runtimeOnly 'mysql:mysql-connector-java'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

//    =================================================================================

    // 테스트 환경을 위한 인메모리 DB 의존성 추가
    testRuntimeOnly 'com.h2database:h2'

    // 테스트 환경을 위한 embedded-redis 의존성 추가
    testImplementation 'it.ozimov:embedded-redis:0.7.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // 순수 MyBatis 컴포넌트에 대한 테스트를 도와주는 mybatis-spring-boot-starter-test 의존성 추가
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.1.4'

    // BDD(Behavior-Driven-Development)의 given-when-then 스타일을 지원하는 REST Assured 의존성 추가
    testImplementation 'io.rest-assured:spring-mock-mvc:4.2.1'

    // 스프링 부트에서 rest-assured 통해 가져오는 의존성 버전 오류 트러블 슈팅
    testImplementation 'io.rest-assured:rest-assured:4.2.1'
    testImplementation 'io.rest-assured:json-path:4.2.1'
    testImplementation 'io.rest-assured:xml-path:4.2.1'

    // 테스트 환경에서 static method의 mock 테스트를 위한 종속성 추가
    testImplementation 'org.mockito:mockito-inline:3.6.28'

}

test {
    useJUnitPlatform()
}
